{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","links","style","marginTop","margin","images","src","justifyContent","heading","type","OfferType","Type1","icon","to","target","Type3","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iPAgGeA,MAzEf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,MAAO,KACf,kBAAC,IAAD,CAAaC,MAAO,CAAEC,UAAW,UAAjC,wCAGA,kBAAC,IAAD,CAAMD,MAAO,CAAEE,OAAQ,uBAAvB,kOAKA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMF,MAAO,CAAEE,OAAQ,aACrB,qDACA,8OAMF,kBAAC,IAAD,CACEC,OAAQ,CACN,CAAEC,IAAK,6BACP,CAAEA,IAAK,6BACP,CAAEA,IAAK,6BACP,CAAEA,IAAK,gCAIX,kBAAC,IAAD,KACE,wBAAIJ,MAAO,CAAEC,UAAW,SAAxB,mBACA,6YAQA,wBAAID,MAAO,CAAEC,UAAW,SAAxB,cACA,4EAEF,kBAAC,IAAD,CACED,MAAO,CAAEK,eAAgB,eAAgBJ,UAAW,SAEpD,kBAAC,IAAD,CACEK,QAAQ,aACRC,KAAMC,IAAUC,MAChBC,KAAM,kBAAC,IAAD,OAHR,eAKY,IACV,kBAAC,IAAD,CAAMC,GAAG,IAAIC,OAAO,OAApB,WAIF,kBAAC,IAAD,CACEN,QAAQ,uBACRC,KAAMC,IAAUK,MAChBH,KAAM,kBAAC,IAAD,OAEN,mDACA,iDACA,uBAAGI,KAAK,wCAAwCF,OAAO,OAAvD,kBC1EQG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c35e12f2.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport {\n  Wrapper,\n  MainHeading,\n  Collage,\n  Vertical,\n  Horizontal,\n  Link,\n  Image,\n  Offer,\n  MicroBlogIcon,\n  OfferType,\n  DevelopmentIcon,\n  SecurityIcon,\n  WorkshopIcon,\n  BoatIcon,\n  LocationIcon,\n  Header,\n  Text,\n  Lead\n} from \"@kokitotsos/react-components\";\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Header links={[]}></Header>\n      <MainHeading style={{ marginTop: \"140px\" }}>\n        Studentkväll på Keep It Simple\n      </MainHeading>\n      <Lead style={{ margin: \"50px 0px 100px 0px\" }}>\n        Är du student som snart är ute på arbetsmarknaden? Då vill vi visa vad\n        vi brinner för! KITS bjuder till inspirationskväll med berättelser från\n        vår verklighet tillsammans med en bit mat och dryck.\n      </Lead>\n      <Vertical>\n        <Text style={{ margin: \"30px 0px\" }}>\n          <h2>Välkommen till oss</h2>\n          <p>\n            45 april kl 17.92-52.21 ses vi och vi ser fram emot att träffa er,\n            som vi hoppas kan bli våra framtida kollegor. Kvällen kommer\n            innehålla historier från arbetslivet och hands on live-kodning.\n          </p>\n        </Text>\n        <Collage\n          images={[\n            { src: \"./formaner_kontoret01.jpg\" },\n            { src: \"./formaner_kontoret02.jpg\" },\n            { src: \"./formaner_kontoret04.jpg\" },\n            { src: \"./formaner_kontoret07.jpg\" }\n          ]}\n        />\n\n        <Text>\n          <h2 style={{ marginTop: \"20px\" }}>Vilka är vi?</h2>\n          <p>\n            KITS är ett it-konsultbolag baserat i Göteborg. Vi är en blandning\n            av talanger och experter. Vi har stort fokus på kompetensutveckling\n            och kompetensspridning inom våra teknik- och verksamhetsområden. Vi\n            utvecklar hela tiden KITS till ett bättre bolag där det är högt i\n            tak, processerna är agila och där det är kul på jobbet.\n          </p>\n\n          <h2 style={{ marginTop: \"20px\" }}>Tävling</h2>\n          <p>Ta med din dator och utmana kompisarna i ...</p>\n        </Text>\n        <Horizontal\n          style={{ justifyContent: \"space-around\", marginTop: \"50px\" }}\n        >\n          <Offer\n            heading=\"Anmälan\"\n            type={OfferType.Type1}\n            icon={<WorkshopIcon />}\n          >\n            Anmäl dig{\" \"}\n            <Link to=\"#\" target=\"tab\">\n              här\n            </Link>\n          </Offer>\n          <Offer\n            heading=\"På vårt kontor\"\n            type={OfferType.Type3}\n            icon={<LocationIcon />}\n          >\n            <p>Norra Allégatan 8</p>\n            <p>413 01 Göteborg</p>\n            <a href=\"https://goo.gl/maps/vZryr7ABfYZqMZZM6\" target=\"tab\">\n              Hitta hit\n            </a>\n          </Offer>\n        </Horizontal>\n      </Vertical>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}